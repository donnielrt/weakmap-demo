{"version":3,"sources":["../src/app.js"],"names":["app","Koa","use","enableTypes","formLimit","jsonLimit","skip","env","ctx","next","status","throw","err","statusCode","body","message","emit","__dirname","map","html","router","routes"],"mappings":"oGAAA;AACA;AACA;AACA;AACA;AACA,0D;;AAEA,MAAMA,GAAG,GAAG,IAAIC,YAAJ,EAAZ;;AAEA;AACAD,GAAG,CAACE,GAAJ;AACE,4BAAW;AACTC,EAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,MAAT,CADJ;AAETC,EAAAA,SAAS,EAAE,MAFF;AAGTC,EAAAA,SAAS,EAAE,MAHF,EAAX,CADF;;;;AAQA;AACAL,GAAG,CAACE,GAAJ;AACE,wBAAO,KAAP,EAAc;AACZI,EAAAA,IAAI,EAAE,MAAMN,GAAG,CAACO,GAAJ,KAAY,MADZ,EAAd,CADF;;;;AAMA;AACAP,GAAG,CAACE,GAAJ,CAAQ,oBAAR;;AAEA;AACAF,GAAG,CAACE,GAAJ,CAAQ,OAAOM,GAAP,EAAYC,IAAZ,KAAqB;AAC3B,MAAI;AACF,UAAMA,IAAI,EAAV;AACA,QAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBF,MAAAA,GAAG,CAACG,KAAJ,CAAU,GAAV;AACD;AACF,GALD,CAKE,OAAOC,GAAP,EAAY;AACZJ,IAAAA,GAAG,CAACE,MAAJ,GAAaE,GAAG,CAACC,UAAJ,IAAkBD,GAAG,CAACF,MAAtB,IAAgC,GAA7C;AACAF,IAAAA,GAAG,CAACM,IAAJ,GAAW;AACTD,MAAAA,UAAU,EAAEL,GAAG,CAACE,MADP;AAETK,MAAAA,OAAO,EAAEH,GAAG,CAACG,OAFJ,EAAX;;AAIAP,IAAAA,GAAG,CAACR,GAAJ,CAAQgB,IAAR,CAAa,OAAb,EAAsBJ,GAAtB,EAA2BJ,GAA3B;AACD;AACF,CAdD;;AAgBA;AACAR,GAAG,CAACE,GAAJ;AACE,uBAAMe,SAAS,GAAG,QAAlB,EAA4B;AAC1BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,IAAI,EAAE,YADH,EADqB,EAA5B,CADF;;;;;AAQA;AACAnB,GAAG,CAACE,GAAJ,CAAQkB,gBAAOC,MAAP,EAAR,E;;AAEerB,G","sourcesContent":["import Koa from \"koa\";\nimport cors from \"@koa/cors\";\nimport logger from \"koa-morgan\";\nimport bodyParser from \"koa-bodyparser\";\nimport views from \"koa-views\";\nimport router from \"./routes\";\n\nconst app = new Koa();\n\n// Set middlewares\napp.use(\n  bodyParser({\n    enableTypes: [\"json\", \"form\"],\n    formLimit: \"10mb\",\n    jsonLimit: \"10mb\"\n  })\n);\n\n// Logger\napp.use(\n  logger(\"dev\", {\n    skip: () => app.env === \"test\"\n  })\n);\n\n// Enable CORS\napp.use(cors());\n\n// Default error handler middleware\napp.use(async (ctx, next) => {\n  try {\n    await next();\n    if (ctx.status === 404) {\n      ctx.throw(404);\n    }\n  } catch (err) {\n    ctx.status = err.statusCode || err.status || 500;\n    ctx.body = {\n      statusCode: ctx.status,\n      message: err.message\n    };\n    ctx.app.emit(\"error\", err, ctx);\n  }\n});\n\n// Views\napp.use(\n  views(__dirname + \"/views\", {\n    map: {\n      html: \"underscore\"\n    }\n  })\n);\n\n// Routes\napp.use(router.routes());\n\nexport default app;\n"],"file":"app.js"}